import{a as w,b as M}from"./chunk-K2HBSNIS.js";import{a as D,b as P,c as q,d as k}from"./chunk-EAHOORUK.js";import{$ as S,Ab as T,Da as b,Ga as f,Pa as l,Qa as n,Ra as i,Ta as y,Ua as o,Va as c,_,bb as x,cb as p,eb as h,f as v,l as C,va as r,yb as E,za as g}from"./chunk-XSCUIATP.js";function R(d,t){if(d&1){let u=y();n(0,"app-slider",43),o("valueChange",function(s){_(u);let a=c();return S(a.updatePedestrianPhaseDuration(s))}),i()}if(d&2){let u=c();l("min",10)("max",60)("step",5)("value",u.simulationConfig.pedestrianPhaseDuration)}}function I(d,t){if(d&1&&(n(0,"div",44)(1,"div",45),p(2),i()()),d&2){let u=c();r(),x(u.getStatusMessageClass()),r(),h(" ",u.statusMessage," ")}}var L=class d{constructor(t,u,e){this.rlService=t;this.baselineService=u;this.dqnService=e}destroy$=new C;simulationConfig={arrivalRates:[.1,.08,.12,.09],episodeLength:1e3,timestepDuration:1,maxQueueLength:50,minPhaseDuration:15,maxPhaseDuration:60,clearanceTime:3,pedestrianPhaseEnabled:!1,pedestrianPhaseDuration:20,gridSize:10};dqnConfig={learningRate:.001,gamma:.95,epsilon:1,epsilonDecay:.995,epsilonMin:.01,batchSize:32,memorySize:1e4,targetUpdateFreq:100};statusMessage="";statusType="info";isSaving=!1;isLoading=!1;ngOnInit(){this.loadCurrentSettings()}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}loadCurrentSettings(){this.simulationConfig=this.rlService.getConfig(),this.dqnConfig=this.dqnService.getConfig()}updateArrivalRate(t,u){this.simulationConfig.arrivalRates[t]=u,this.showStatus("Arrival rate updated","info")}updateEpisodeLength(t){this.simulationConfig.episodeLength=t,this.showStatus("Episode length updated","info")}updateTimestepDuration(t){this.simulationConfig.timestepDuration=t,this.showStatus("Timestep duration updated","info")}updateMinPhaseDuration(t){this.simulationConfig.minPhaseDuration=t,this.showStatus("Minimum phase duration updated","info")}updateMaxPhaseDuration(t){this.simulationConfig.maxPhaseDuration=t,this.showStatus("Maximum phase duration updated","info")}updateClearanceTime(t){this.simulationConfig.clearanceTime=t,this.showStatus("Clearance time updated","info")}updateMaxQueueLength(t){this.simulationConfig.maxQueueLength=t,this.showStatus("Maximum queue length updated","info")}updatePedestrianPhaseEnabled(t){let u=t.target;this.simulationConfig.pedestrianPhaseEnabled=u.checked,this.showStatus("Pedestrian phase setting updated","info")}updatePedestrianPhaseDuration(t){this.simulationConfig.pedestrianPhaseDuration=t,this.showStatus("Pedestrian phase duration updated","info")}updateLearningRate(t){this.dqnConfig.learningRate=t,this.showStatus("Learning rate updated","info")}updateGamma(t){this.dqnConfig.gamma=t,this.showStatus("Discount factor updated","info")}updateEpsilon(t){this.dqnConfig.epsilon=t,this.showStatus("Epsilon updated","info")}updateEpsilonDecay(t){this.dqnConfig.epsilonDecay=t,this.showStatus("Epsilon decay updated","info")}updateEpsilonMin(t){this.dqnConfig.epsilonMin=t,this.showStatus("Minimum epsilon updated","info")}updateBatchSize(t){this.dqnConfig.batchSize=t,this.showStatus("Batch size updated","info")}updateMemorySize(t){this.dqnConfig.memorySize=t,this.showStatus("Memory size updated","info")}updateTargetUpdateFreq(t){this.dqnConfig.targetUpdateFreq=t,this.showStatus("Target update frequency updated","info")}applySettings(){try{this.rlService.updateConfig(this.simulationConfig),this.baselineService.updateConfig(this.simulationConfig),this.dqnService.updateConfig(this.dqnConfig),this.showStatus("All settings applied successfully!","success")}catch(t){this.showStatus("Error applying settings: "+t,"error")}}resetToDefaults(){this.simulationConfig={arrivalRates:[.1,.08,.12,.09],episodeLength:1e3,timestepDuration:1,maxQueueLength:50,minPhaseDuration:15,maxPhaseDuration:60,clearanceTime:3,pedestrianPhaseEnabled:!1,pedestrianPhaseDuration:20,gridSize:10},this.dqnConfig={learningRate:.001,gamma:.95,epsilon:1,epsilonDecay:.995,epsilonMin:.01,batchSize:32,memorySize:1e4,targetUpdateFreq:100},this.showStatus("Settings reset to defaults","info")}exportConfig(){let t={simulation:this.simulationConfig,dqn:this.dqnConfig,timestamp:new Date().toISOString()},u=new Blob([JSON.stringify(t,null,2)],{type:"application/json"}),e=window.URL.createObjectURL(u),s=document.createElement("a");s.href=e,s.download=`traffic-simulation-config-${new Date().toISOString().split("T")[0]}.json`,s.click(),window.URL.revokeObjectURL(e),this.showStatus("Configuration exported successfully","success")}importConfig(){let t=document.createElement("input");t.type="file",t.accept=".json",t.onchange=u=>{let e=u.target.files[0];if(e){let s=new FileReader;s.onload=a=>{try{let m=JSON.parse(a.target.result);m.simulation&&(this.simulationConfig=m.simulation),m.dqn&&(this.dqnConfig=m.dqn),this.showStatus("Configuration imported successfully","success")}catch{this.showStatus("Error importing configuration: Invalid file format","error")}},s.readAsText(e)}},t.click()}saveModel(){return v(this,null,function*(){this.isSaving=!0;try{yield this.dqnService.saveModel(),this.showStatus("Model saved successfully","success")}catch(t){this.showStatus("Error saving model: "+t,"error")}finally{this.isSaving=!1}})}loadModel(){return v(this,null,function*(){this.isLoading=!0;try{yield this.dqnService.loadModel(),this.showStatus("Model loaded successfully","success")}catch(t){this.showStatus("Error loading model: "+t,"error")}finally{this.isLoading=!1}})}resetTraining(){this.dqnService.clearMemory(),this.dqnService.resetEpsilon(),this.showStatus("Training reset - memory cleared and epsilon reset","info")}showStatus(t,u){this.statusMessage=t,this.statusType=u,setTimeout(()=>{this.statusMessage=""},3e3)}getStatusMessageClass(){switch(this.statusType){case"success":return"bg-green-100 text-green-800 border border-green-200";case"error":return"bg-red-100 text-red-800 border border-red-200";case"info":default:return"bg-blue-100 text-blue-800 border border-blue-200"}}static \u0275fac=function(u){return new(u||d)(g(q),g(k),g(P))};static \u0275cmp=b({type:d,selectors:[["app-settings"]],decls:90,vars:82,consts:[[1,"settings-container","p-6","max-w-7xl","mx-auto"],[1,"header","mb-8"],[1,"text-3xl","font-bold","text-gray-900","mb-2"],[1,"text-lg","text-gray-600"],[1,"grid","grid-cols-1","lg:grid-cols-2","gap-8"],[1,"bg-white","rounded-lg","shadow-md","p-6"],[1,"text-xl","font-semibold","text-gray-800","mb-6"],[1,"space-y-6"],[1,"text-lg","font-medium","text-gray-700","mb-4"],[1,"space-y-4"],["label","North Direction","unit"," veh/s","description","Vehicles arriving from north per second",3,"valueChange","min","max","step","value"],["label","East Direction","unit"," veh/s","description","Vehicles arriving from east per second",3,"valueChange","min","max","step","value"],["label","South Direction","unit"," veh/s","description","Vehicles arriving from south per second",3,"valueChange","min","max","step","value"],["label","West Direction","unit"," veh/s","description","Vehicles arriving from west per second",3,"valueChange","min","max","step","value"],["label","Episode Length","unit"," steps","description","Number of simulation steps per episode",3,"valueChange","min","max","step","value"],["label","Timestep Duration","unit"," seconds","description","Real time duration of each simulation step",3,"valueChange","min","max","step","value"],["label","Minimum Phase Duration","unit"," seconds","description","Minimum time a traffic light stays in one phase",3,"valueChange","min","max","step","value"],["label","Maximum Phase Duration","unit"," seconds","description","Maximum time a traffic light can stay in one phase",3,"valueChange","min","max","step","value"],["label","Clearance Time","unit"," seconds","description","Red light time between phase changes",3,"valueChange","min","max","step","value"],["label","Maximum Queue Length","unit"," vehicles","description","Maximum vehicles that can queue in one direction",3,"valueChange","min","max","step","value"],[1,"flex","items-center","space-x-3"],["type","checkbox","id","pedestrianPhase",1,"h-4","w-4","text-blue-600","focus:ring-blue-500","border-gray-300","rounded",3,"change","checked"],["for","pedestrianPhase",1,"text-sm","font-medium","text-gray-700"],["label","Pedestrian Phase Duration","unit"," seconds","description","Duration of pedestrian crossing phase",3,"min","max","step","value","valueChange",4,"ngIf"],["label","Learning Rate","description","How fast the AI learns from experience",3,"valueChange","min","max","step","value"],["label","Discount Factor (\u03B3)","description","Importance of future rewards vs immediate rewards",3,"valueChange","min","max","step","value"],["label","Epsilon (\u03B5)","description","Probability of taking random actions for exploration",3,"valueChange","min","max","step","value"],["label","Epsilon Decay","description","How quickly exploration decreases over time",3,"valueChange","min","max","step","value"],["label","Minimum Epsilon","description","Minimum level of random exploration to maintain",3,"valueChange","min","max","step","value"],["label","Batch Size","description","Number of experiences used for each training step",3,"valueChange","min","max","step","value"],["label","Memory Size","unit"," experiences","description","Maximum number of experiences stored for training",3,"valueChange","min","max","step","value"],["label","Target Update Frequency","unit"," steps","description","How often to update the target network",3,"valueChange","min","max","step","value"],[1,"space-y-3"],[1,"grid","grid-cols-2","gap-3"],["variant","success",3,"click","fullWidth","disabled"],["variant","secondary",3,"click","fullWidth","disabled"],["variant","danger",3,"click","fullWidth"],[1,"mt-8","bg-white","rounded-lg","shadow-md","p-6"],[1,"text-lg","font-semibold","text-gray-800","mb-4"],[1,"flex","flex-wrap","gap-4"],["variant","primary",3,"click"],["variant","secondary",3,"click"],["class","mt-4",4,"ngIf"],["label","Pedestrian Phase Duration","unit"," seconds","description","Duration of pedestrian crossing phase",3,"valueChange","min","max","step","value"],[1,"mt-4"],[1,"p-3","rounded-md","text-sm"]],template:function(u,e){u&1&&(n(0,"div",0)(1,"div",1)(2,"h1",2),p(3,"Simulation Settings"),i(),n(4,"p",3),p(5,"Configure traffic parameters and AI settings"),i()(),n(6,"div",4)(7,"div",5)(8,"h2",6),p(9,"Traffic Parameters"),i(),n(10,"div",7)(11,"div")(12,"h3",8),p(13,"Vehicle Arrival Rates"),i(),n(14,"div",9)(15,"app-slider",10),o("valueChange",function(a){return e.updateArrivalRate(0,a)}),i(),n(16,"app-slider",11),o("valueChange",function(a){return e.updateArrivalRate(1,a)}),i(),n(17,"app-slider",12),o("valueChange",function(a){return e.updateArrivalRate(2,a)}),i(),n(18,"app-slider",13),o("valueChange",function(a){return e.updateArrivalRate(3,a)}),i()()(),n(19,"div")(20,"h3",8),p(21,"Episode Configuration"),i(),n(22,"div",9)(23,"app-slider",14),o("valueChange",function(a){return e.updateEpisodeLength(a)}),i(),n(24,"app-slider",15),o("valueChange",function(a){return e.updateTimestepDuration(a)}),i()()(),n(25,"div")(26,"h3",8),p(27,"Traffic Light Phases"),i(),n(28,"div",9)(29,"app-slider",16),o("valueChange",function(a){return e.updateMinPhaseDuration(a)}),i(),n(30,"app-slider",17),o("valueChange",function(a){return e.updateMaxPhaseDuration(a)}),i(),n(31,"app-slider",18),o("valueChange",function(a){return e.updateClearanceTime(a)}),i()()(),n(32,"div")(33,"h3",8),p(34,"Other Parameters"),i(),n(35,"div",9)(36,"app-slider",19),o("valueChange",function(a){return e.updateMaxQueueLength(a)}),i(),n(37,"div",20)(38,"input",21),o("change",function(a){return e.updatePedestrianPhaseEnabled(a)}),i(),n(39,"label",22),p(40," Enable Pedestrian Phase "),i()(),f(41,R,1,4,"app-slider",23),i()()()(),n(42,"div",5)(43,"h2",6),p(44,"Deep Q-Network Settings"),i(),n(45,"div",7)(46,"div")(47,"h3",8),p(48,"Learning Parameters"),i(),n(49,"div",9)(50,"app-slider",24),o("valueChange",function(a){return e.updateLearningRate(a)}),i(),n(51,"app-slider",25),o("valueChange",function(a){return e.updateGamma(a)}),i()()(),n(52,"div")(53,"h3",8),p(54,"Exploration Strategy"),i(),n(55,"div",9)(56,"app-slider",26),o("valueChange",function(a){return e.updateEpsilon(a)}),i(),n(57,"app-slider",27),o("valueChange",function(a){return e.updateEpsilonDecay(a)}),i(),n(58,"app-slider",28),o("valueChange",function(a){return e.updateEpsilonMin(a)}),i()()(),n(59,"div")(60,"h3",8),p(61,"Training Configuration"),i(),n(62,"div",9)(63,"app-slider",29),o("valueChange",function(a){return e.updateBatchSize(a)}),i(),n(64,"app-slider",30),o("valueChange",function(a){return e.updateMemorySize(a)}),i(),n(65,"app-slider",31),o("valueChange",function(a){return e.updateTargetUpdateFreq(a)}),i()()(),n(66,"div")(67,"h3",8),p(68,"Model Management"),i(),n(69,"div",32)(70,"div",33)(71,"app-button",34),o("click",function(){return e.saveModel()}),p(72),i(),n(73,"app-button",35),o("click",function(){return e.loadModel()}),p(74),i()(),n(75,"app-button",36),o("click",function(){return e.resetTraining()}),p(76," Reset Training "),i()()()()()(),n(77,"div",37)(78,"h3",38),p(79,"Configuration Actions"),i(),n(80,"div",39)(81,"app-button",40),o("click",function(){return e.applySettings()}),p(82," Apply All Settings "),i(),n(83,"app-button",41),o("click",function(){return e.resetToDefaults()}),p(84," Reset to Defaults "),i(),n(85,"app-button",41),o("click",function(){return e.exportConfig()}),p(86," Export Config "),i(),n(87,"app-button",41),o("click",function(){return e.importConfig()}),p(88," Import Config "),i()(),f(89,I,3,3,"div",42),i()()),u&2&&(r(15),l("min",0)("max",.5)("step",.01)("value",e.simulationConfig.arrivalRates[0]),r(),l("min",0)("max",.5)("step",.01)("value",e.simulationConfig.arrivalRates[1]),r(),l("min",0)("max",.5)("step",.01)("value",e.simulationConfig.arrivalRates[2]),r(),l("min",0)("max",.5)("step",.01)("value",e.simulationConfig.arrivalRates[3]),r(5),l("min",100)("max",5e3)("step",100)("value",e.simulationConfig.episodeLength),r(),l("min",.1)("max",5)("step",.1)("value",e.simulationConfig.timestepDuration),r(5),l("min",5)("max",60)("step",5)("value",e.simulationConfig.minPhaseDuration),r(),l("min",30)("max",120)("step",10)("value",e.simulationConfig.maxPhaseDuration),r(),l("min",1)("max",10)("step",1)("value",e.simulationConfig.clearanceTime),r(5),l("min",10)("max",100)("step",5)("value",e.simulationConfig.maxQueueLength),r(2),l("checked",e.simulationConfig.pedestrianPhaseEnabled),r(3),l("ngIf",e.simulationConfig.pedestrianPhaseEnabled),r(9),l("min",1e-4)("max",.01)("step",1e-4)("value",e.dqnConfig.learningRate),r(),l("min",.8)("max",.999)("step",.001)("value",e.dqnConfig.gamma),r(5),l("min",.01)("max",1)("step",.01)("value",e.dqnConfig.epsilon),r(),l("min",.99)("max",.9999)("step",1e-4)("value",e.dqnConfig.epsilonDecay),r(),l("min",.001)("max",.1)("step",.001)("value",e.dqnConfig.epsilonMin),r(5),l("min",16)("max",128)("step",16)("value",e.dqnConfig.batchSize),r(),l("min",1e3)("max",5e4)("step",1e3)("value",e.dqnConfig.memorySize),r(),l("min",50)("max",1e3)("step",50)("value",e.dqnConfig.targetUpdateFreq),r(6),l("fullWidth",!0)("disabled",e.isSaving),r(),h(" ",e.isSaving?"Saving...":"Save Model"," "),r(),l("fullWidth",!0)("disabled",e.isLoading),r(),h(" ",e.isLoading?"Loading...":"Load Model"," "),r(),l("fullWidth",!0),r(14),l("ngIf",e.statusMessage))},dependencies:[T,E,w,D,M],encapsulation:2})};export{L as SettingsComponent};
